{"name": "get请求查询用户数据列表", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test.test_api.TestApi object at 0x000001A9542ABD48>\ncase = ['case_004', 'get请求查询用户数据列表', 'users', '', 'get', 'data', ...]\n\n    @pytest.mark.parametrize('case', cases)\n    def test_main(self, case):\n        response, expect = BaseRequest.send_request(case)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest_api.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '无效token', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"获取管理员列表成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应字典\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n>           assert actual == v\nE           AssertionError\n\n..\\tools\\data_process.py:95: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "b5253a05-da3c-415a-8ea0-bd00b18382f4-attachment.txt", "type": "text/plain"}], "start": 1606055460236, "stop": 1606055460237}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "4f3399e2-d32d-48b0-bbad-dd1a25aad929-attachment.txt", "type": "text/plain"}], "start": 1606055460237, "stop": 1606055460238}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "a3768f08-0980-4d45-983d-804e782344ee-attachment.txt", "type": "text/plain"}], "start": 1606055460239, "stop": 1606055460240}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "05f68f52-cdb2-4796-bec8-50723fc941b2-attachment.txt", "type": "text/plain"}], "start": 1606055460240, "stop": 1606055460241}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "d047fe0e-38d2-4704-8036-538f6dcab678-attachment.txt", "type": "text/plain"}], "start": 1606055460278, "stop": 1606055460279}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "0903dca6-53d4-4279-a63e-9ae875186313-attachment.txt", "type": "text/plain"}], "start": 1606055460279, "stop": 1606055460280}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "48ac09e5-cea8-4fa1-8166-2697d1b35169-attachment.txt", "type": "text/plain"}], "start": 1606055460280, "stop": 1606055460281}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "900c9b00-8335-42fd-89cf-3817d14937d3-attachment.txt", "type": "text/plain"}], "start": 1606055460282, "stop": 1606055460282}], "attachments": [{"name": "stderr", "source": "ba362366-259a-4027-a734-1d82b443b80b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "['case_004', 'get请求查询用户数据列表', 'users', '', 'get', 'data', '', '{\"pagenum\": 1, \"pagesize\": \"12\", \"msg\": &$.msg&}', '{\"$.meta\":{\"msg\": \"获取管理员列表成功\", \"status\": 200}}']"}], "start": 1606055460236, "stop": 1606055460283, "uuid": "0ffd1a85-d223-4e87-9830-41613e3f9f60", "historyId": "5fa6656b8b1b28bc1fdd0eb962f2b477", "testCaseId": "08d97ba530f9b18be2971da4c2ed1083", "fullName": "test.test_api.TestApi#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "DESKTOP-0T59F1A"}, {"name": "thread", "value": "7848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}